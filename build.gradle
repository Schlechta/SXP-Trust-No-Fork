apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

sourceCompatibility = 1.7
version = '1.0'

jar {
    manifest {
        attributes 'Implementation-Title': 'SXP implementation project',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
	compile fileTree(dir: './libs', include: '*.jar')
	compile 'org.glassfish.main.extras:glassfish-embedded-all:4.1'
	compile 'javax:javaee-api:7.0'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
}

sourceSets {
	main {
	  output.resourcesDir = 'build/classes/main'
	  output.classesDir = 'build/classes/main'
    }
	test {
	  output.resourcesDir = 'build/classes/test'
	  output.classesDir = 'build/classes/test'
    }
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

task(run, dependsOn: 'classes', type: JavaExec) {
	description = 'Launch the application.'
	main = 'model.Application'
	classpath = sourceSets.main.runtimeClasspath
}

eclipse {
  classpath {
     file {
            whenMerged { cp ->
                // Add sources to a classpath entry
                def fileReferenceFactory = new org.gradle.plugins.ide.eclipse.model.internal.FileReferenceFactory()

                def entry = cp.entries.find{ entry -> entry.path.endsWith('jxta.jar') }
                // add javadoc jar
                entry.javadocPath = fileReferenceFactory.fromPath(file('doc/jxta.jar').toString())
            }
        }
        
    downloadSources = true
    downloadJavadoc = true
  }
}